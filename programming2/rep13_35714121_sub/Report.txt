プログラミングII 第13回レポート
学籍番号:35714121
氏名:福富 隆大

以下，提出ファイル，プログラム，実行方法と結果の説明

kadai1
前回はsplitメソッドを使って分割したので今回はuseDelimiterメソッドを使って分割した
分割は前回と違い＠の後を重さとして格納している
また、Edgeクラスにも重さ(weight)を追加している

kadai2
doDijkstraでは、キューを使い今考えているノードのが矢印を持つノードを順に入れていき処理している
ただし、距離を更新した場合のみキューに入れることで無限ループになることを防いでいる
getShortestPathではprev[]をつかってたどっているだけだが親の親は自分としているため無限ループが発生してしまう
その対策としてfor分の終了条件をstartに戻ってきたらとし、for文の外でstartをpathに入れている
また、pathには逆順に入っているので順番を入れ替えている

kadai3
ほとんどDijkstraと同じ方法で実装している
違う点はただのキューをプライオリティーキューに変えたことのみである
課題２では距離を更新した時のみキューに入れていたが、プライオリティーキューに入れれば同じノードについて何度も更新する可能性が減り、多くのノードがあった時でも短時間で実行できる

考察:はじめはダイクストラ法を実装するためにノードをどんどん配列に入れようとしたが、配列だと長さが変えられないのでキューを使った
キューならば可変であり、キューがなくなった時の判定も簡単であるので便利さを再認識した
課題とは関係ないが、課題２を解くために何日も試行錯誤した結果とても簡潔なコードにでき、さらにPQを用いる時にもほとんど変えずに使えたことが自分で最適解を見つけたような気がしてとても嬉しかった

教えてあげた人:いない

自己評価:S