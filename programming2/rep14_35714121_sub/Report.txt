プログラミングII 第14回レポート
学籍番号:35714121
氏名:福富 隆大

以下，提出ファイル，プログラム，実行方法と結果の説明

kadai1
loadGraphで読み込んだファイルを;と,で分割して適切なフィールドに格納している
Nodeクラスは今回必要ないが作っておいた
printGraphでは適切なラベルを書いてそれぞれのフィールドを表示させている
結果
0:0,2,1
1:0,1,1
2:1,2,2

kadai2
EdgeクラスでComparableを実装しcompareToメソッドをOverrideして重さを比べるように変更した
そのおかげでgetSortedEdgesではsortメソッドを使うだけで重みの昇順にできている
結果
0,0,2,1
1,0,1,1
2,1,2,2

kadai3
コンストラクタでparentとrankを初期化している
findメソッドは再起呼び出しを用いて一番上の親を探している
uniteメソッドは引数x,yのrootを見つけその大小を比べてどちらを子にするか決めている
同じrankの場合は第一引数を親にするようにしている
結果
初期状態:
find(0) = 0
find(1) = 1
find(2) = 2
find(3) = 3
find(4) = 4

Unite 0 and 1:
find(0) = 0
find(1) = 0
find(2) = 2
find(3) = 3
find(4) = 4

Unite 2 and 3 , 3 and 4:
find(0) = 0
find(1) = 0
find(2) = 2
find(3) = 2
find(4) = 2

Unite 0 and 4:
find(0) = 0
find(1) = 0
find(2) = 0
find(3) = 0
find(4) = 0

kadai4
MSTを新しくWUGraphインスタンスとして作成し、辺を軽い順にソートする
その後辺のnodeをuniteし、成功したら辺の集合に加えている
これによって重い辺より軽い辺を採用できるのでMSTとなる
結果
Total weight: 2
3,2
0:0,2,1
1:0,1,1

考察:今回はWUGraphのなかでWUGraphのインスタンスを作ったりしていたのでどのフィールドになにが入っているのか理解するのが大変だった
しかし、終わってから考えてみるとloadGraphしたかどうかの違いだった
loadGraphをした場合ファイルの内容が読み込まれているが、していない場合は読み込まれていない
この区別がついていなかった

教えてあげた人:いない

自己評価:S