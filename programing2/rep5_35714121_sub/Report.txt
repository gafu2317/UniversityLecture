プログラミングII 第5回レポート
学籍番号:35714121
氏名:福富 隆大

以下，提出ファイル，プログラム，実行方法と結果の説明
ensyu14-1
plan2Dをinplementsする時Rectangleにはそのままインターフェイス宣言すればいいが、半円クラスにもにインターフェイス宣言する時はRightSemicircleにインターフェイス宣言するのではなくsemicircleクラスにインターフェイス宣言する。
これは、rectangleでインターフェイス宣言したのでsemicircleにもインターフェイス宣言する必要があり、semicircleでインターフェイス宣言をするとサブクラスであるRinghtSemicircleにも間接的にインターフェイス宣言されていることになる。
これにより、RightSemicircleでもインターフェイス宣言してしまうと二重にインターフェイス宣言していることになってしまうのでエラーが出てしまう。
半円のgatAreaメソッドが返す値は整数なので、Overrideする時に整数に丸めている。

ensyu14-2
ColoredWearableをWearableとColorの二つをスーパーインターフェイスとして持つインターフェイスとして作った。
WearableComputerは元々、ColorとWearableの二つのインターフェイス宣言をしていたが、新たにColorとWearableをスーパーインターフェイスとするColoredWearableを作ったので、それをインターフェイス宣言するだけでよくなった。
たYELLOWをColoredWearableに定義したのでTestクラスに処理を追加する際、他の色のようにColorインターフェイスのフィールドを参照しようとするとエラーになる。

kadai
問題文の通りにクラス階層の設計を行い、ヒントの穴埋めをしてプログラムを書いた。
Quadrantクラスでメソッドinsideをオーバーライドせずに，プログラムをコンパイルすると以下のようなエラーが出た。
``Quadrant.java:2: エラー: Quadrantはabstractでなく、UpperBounded内のabstractメソッドinside(double,double)をオーバーライドしません
public class Quadrant extends FunctionQI implements UpperBounded
       ^
エラー1個
make: *** [And.class] Error 1``
これはインターフェイスの抽象メソッドをすべて実装していないなら抽象クラスでなければいけないが、今回は抽象クラスではないのでエラーが出たと思われる。

考察:
インターフェイスとは抽象クラスに似ているが一番大きな違いは多重継承ができる。
抽象クラスではダイヤモンド継承や多重継承ができなかったが、インターフェイスではできる。
これは抽象クラスと違いインターフェイスは実装を持たないことで様々な問題を回避できるからである。
例えば、抽象クラスでダイヤモンド継承ができるとすると、上位クラスが下位クラスのメンバなどを認知していないことでメソッドがうまくいかないことや、
同じ変数を違う操作するメソッドが存在するという問題点があったがインターフェイスは実装を持たないのでこれらを回避できる。
これらが抽象クラスと似たインターフェイスが存在する理由であると考える。

教えてあげた人:いない

自己評価:S